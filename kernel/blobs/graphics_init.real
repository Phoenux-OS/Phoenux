org 0x8000
bits 16

; DS:EBX --> Return struct

push ebx
mov ax, 0x4f00
mov di, vbe_info_struct
int 0x10
pop ebx

mov al, byte [vbe_info_struct.version_min]
mov byte [ebx], al

mov al, byte [vbe_info_struct.version_maj]
mov byte [ebx+1], al

xor eax, eax
mov ax, word [vbe_info_struct.oem_seg]
shl eax, 4
xor ecx, ecx
mov cx, word [vbe_info_struct.oem_off]
add eax, ecx
mov dword [ebx+2], eax

mov eax, dword [vbe_info_struct.capabilities]
mov dword [ebx+6], eax

xor eax, eax
mov ax, word [vbe_info_struct.vid_modes_seg]
shl eax, 4
xor ecx, ecx
mov cx, word [vbe_info_struct.vid_modes_off]
add eax, ecx
mov dword [ebx+10], eax

mov ax, word [vbe_info_struct.vid_mem_blocks]
mov word [ebx+14], ax

mov ax, word [vbe_info_struct.software_rev]
mov word [ebx+16], ax

xor eax, eax
mov ax, word [vbe_info_struct.vendor_seg]
shl eax, 4
xor ecx, ecx
mov cx, word [vbe_info_struct.vendor_off]
add eax, ecx
mov dword [ebx+18], eax

xor eax, eax
mov ax, word [vbe_info_struct.prod_name_seg]
shl eax, 4
xor ecx, ecx
mov cx, word [vbe_info_struct.prod_name_off]
add eax, ecx
mov dword [ebx+22], eax

xor eax, eax
mov ax, word [vbe_info_struct.prod_rev_seg]
shl eax, 4
xor ecx, ecx
mov cx, word [vbe_info_struct.prod_rev_off]
add eax, ecx
mov dword [ebx+26], eax

ret

align 4

vbe_info_struct:
    .signature          db      'VBE2'
    .version_min        db      0
    .version_maj        db      0
    .oem_off            dw      0
    .oem_seg            dw      0
    .capabilities       dd      0
    .vid_modes_off      dw      0
    .vid_modes_seg      dw      0
    .vid_mem_blocks     dw      0
    .software_rev       dw      0
    .vendor_off         dw      0
    .vendor_seg         dw      0
    .prod_name_off      dw      0
    .prod_name_seg      dw      0
    .prod_rev_off       dw      0
    .prod_rev_seg       dw      0
    .reserved           times   222     db  0
    .oem_data           times   256     db  0
